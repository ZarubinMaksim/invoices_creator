const express = require("express");
const multer = require("multer");
const path = require("path");
const fs = require("fs");
const cors = require("cors");
const xlsx = require('xlsx');
const toThaiBahtText = require('thai-baht-text');
const { toWords } = require('number-to-words');
const app = express();
const PORT = 4000;
const puppeteer = require("puppeteer");


app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

function getCurrentDate() {
  const today = new Date();
  const day = String(today.getDate()).padStart(2, '0');
  const month = String(today.getMonth() + 1).padStart(2, '0');
  const year = today.getFullYear();
  return `${day}/${month}/${year}`;
}

function excelDateToDDMMYYYY(serial) {
  const excelEpoch = new Date(Date.UTC(1899, 11, 30)); // –±–∞–∑–∞ –¥–ª—è Excel
  const days = Math.floor(serial);
  const milliseconds = days * 24 * 60 * 60 * 1000;
  const date = new Date(excelEpoch.getTime() + milliseconds);

  const dd = String(date.getUTCDate()).padStart(2, '0');
  const mm = String(date.getUTCMonth() + 1).padStart(2, '0'); // –º–µ—Å—è—Ü—ã —Å 0
  const yyyy = date.getUTCFullYear();

  return `${dd}/${mm}/${yyyy}`;
}

function generateInvoiceNumber(counter, serial) {
  const excelEpoch = new Date(Date.UTC(1899, 11, 30)); // –±–∞–∑–∞ –¥–ª—è Excel
  const days = Math.floor(serial);
  const milliseconds = days * 24 * 60 * 60 * 1000;
  const date = new Date(excelEpoch.getTime() + milliseconds);

  const mm = String(date.getUTCMonth() + 1).padStart(2, '0'); // –º–µ—Å—è—Ü—ã —Å 0
  const yyyy = date.getUTCFullYear();

  const number = String(counter).padStart(3, '0'); // –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Å –≤–µ–¥—É—â–∏–º–∏ –Ω—É–ª—è–º–∏
  return `PS${yyyy}${mm}-${number}`;
}


// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∂–∏–≤
app.get("/", (req, res) => {
  res.send("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!");
});

let browserInstance = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±—Ä–∞—É–∑–µ—Ä–∞
const getBrowser = async () => {
    if (!browserInstance) {
        console.log('üåê –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...');
        
        const launchOptions = {
            args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--disable-gpu',
                '--single-process',
                '--no-zygote',
                '--disable-extensions',
                '--disable-software-rasterizer',
                '--disable-background-timer-throttling',
                '--disable-backgrounding-occluded-windows',
                '--disable-renderer-backgrounding'
            ],
            headless: 'new',
            timeout: 120000,
            executablePath: '/snap/chromium/current/usr/lib/chromium-browser/chrome'
        };
        
        console.log('‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞:', launchOptions);
        
        try {
            browserInstance = await puppeteer.launch(launchOptions);
            console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
            const version = await browserInstance.version();
            console.log('üåê –í–µ—Ä—Å–∏—è –±—Ä–∞—É–∑–µ—Ä–∞:', version);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞:', error);
            
            // –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å
            console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å...');
            launchOptions.executablePath = '/usr/bin/chromium-browser';
            
            try {
                browserInstance = await puppeteer.launch(launchOptions);
                console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º –ø—É—Ç–µ–º');
            } catch (retryError) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –∑–∞–ø—É—Å–∫–∞:', retryError);
                throw retryError;
            }
        }
    }
    
    return browserInstance;
}

// ----------------–ó–ê–ì–†–£–ó–ö–ê –î–û–ö–£–ú–ï–ù–¢–ê---------------------

// –ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const uploadFolder = path.join(__dirname, 'uploads');
if (!fs.existsSync(uploadFolder)) {
    console.log('üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫:', uploadFolder);
    fs.mkdirSync(uploadFolder, { recursive: true });
} else {
    console.log('üìÅ –ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', uploadFolder);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ multer
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
      console.log('üìÇ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤:', uploadFolder);
      cb(null, uploadFolder);
  },
  filename: (req, file, cb) => {
      const ext = path.extname(file.originalname);
      const name = path.basename(file.originalname, ext);
      const filename = `${name}-${Date.now()}${ext}`;
      console.log('üìù –ù–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞:', filename);
      cb(null, filename);
  }
});
const upload = multer({
  storage,
  limits: { fileSize: 100 * 1024 * 1024 }
});

// app.post("/upload", upload.single("excel"), async (req, res) => {
//   if (!req.file) return res.status(400).send({ message: "–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω" });

//   console.log('üìñ –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª...', req.file.path);
//   const workbook = xlsx.readFile(req.file.path);
//   const sheetName = workbook.SheetNames[workbook.SheetNames.length - 4];
//   console.log('üìë –í—ã–±—Ä–∞–Ω –ª–∏—Å—Ç:', sheetName);
//   const worksheet = workbook.Sheets[sheetName];
//   const data = xlsx.utils.sheet_to_json(worksheet, { defval: '' });
//   console.log('üìà –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫:', data.length);

//   let results = [];
//   let invoiceCount = 0;

//   const pdfFolder = path.join(__dirname, 'pdf');
//   if (!fs.existsSync(pdfFolder)) fs.mkdirSync(pdfFolder);

//   console.log('üñ•Ô∏è –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±—Ä–∞—É–∑–µ—Ä–∞...');
//   const browser = await getBrowser(); // –ï—Å–ª–∏ Puppeteer –Ω—É–∂–µ–Ω
//   console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');

//   for (let rowIndex = 2; rowIndex < data.length; rowIndex++) {
//     console.log('–º—ã –≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä')
//     invoiceCount++;
//     const row = data[rowIndex];
//     const name = row['Guest name'] || '';
//     const room = row['Room no.'] || '';
//     if (!name && !room) continue;

//     const email = '89940028777@ya.ru'; // –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞

//     // –í—Å–µ —Ç–≤–æ–∏ –ø–æ–ª—è
//     const water_start = (parseFloat(row['Water Meter numbers']) || 0).toFixed(2);
//     const water_end = (parseFloat(row['__EMPTY_2']) || 0).toFixed(2);
//     const water_consumption = (parseFloat(row['Water consumption']) || 0).toFixed(2);
//     const water_price = 89;
//     const water_total = (parseFloat(row['__EMPTY_3']) || 0).toFixed(2);

//     const electricity_start = (parseFloat(row['Electricity Meter numbers']) || 0).toFixed(2);
//     const electricity_end = (parseFloat(row['__EMPTY_4']) || 0).toFixed(2);
//     const electricity_consumption = (parseFloat(row['Eletricity']) || 0).toFixed(2);
//     const electricity_price = 8;
//     const electricity_total = (parseFloat(row['__EMPTY_5']) || 0).toFixed(2);

//     const amount_total = (parseFloat(row['Before amount']) || 0).toFixed(2);
//     const amount_before_vat = (parseFloat(row['Before amount']) || 0).toFixed(2);
//     const vat = (parseFloat(row['SVC']) || 0).toFixed(2);
//     const amount_total_net = (parseFloat(row['Total amount']) || 0).toFixed(2);

//     const invoice_number = generateInvoiceNumber(invoiceCount, row['Period Check']);
//     const date_from = excelDateToDDMMYYYY(row['Period Check']) || '';
//     const date_to = excelDateToDDMMYYYY(row['__EMPTY_1']) || '';
//     const date_of_creating = getCurrentDate();
//     const total_in_thai = toThaiBahtText(amount_total_net);
//     const total_in_english = toWords(amount_total_net);
//     console.log('–º—ã —è–µ–∫–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ', date_to, name)

//     try {
//       // –ß–∏—Ç–∞–µ–º HTML —à–∞–±–ª–æ–Ω
//       console.log('–º—ã –≤ —Ñ—É–Ω–∫—Ü–∏–∏ try')

//       const logoPath = path.join(__dirname, 'img/logo.png');
//       const qrPath = path.join(__dirname, 'img/qr.png');
//       const logoDataUri = `data:image/png;base64,${fs.readFileSync(logoPath).toString('base64')}`;
//       const qrDataUri = `data:image/png;base64,${fs.readFileSync(qrPath).toString('base64')}`;

//       let invoiceHtml = fs.readFileSync(path.join(__dirname, 'invoice_template.html'), 'utf-8');
//       invoiceHtml = invoiceHtml
//         .replace('{{name}}', name)
//         .replace('{{room}}', room)
//         .replace('{{water_start}}', water_start)
//         .replace('{{water_end}}', water_end)
//         .replace('{{water_consumption}}', water_consumption)
//         .replace('{{water_price}}', water_price)
//         .replace('{{water_total}}', water_total)
//         .replace('{{electricity_start}}', electricity_start)
//         .replace('{{electricity_end}}', electricity_end)
//         .replace('{{electricity_consumption}}', electricity_consumption)
//         .replace('{{electricity_price}}', electricity_price)
//         .replace('{{electricity_total}}', electricity_total)
//         .replace('{{amount_total}}', amount_total)
//         .replace('{{amount_before_vat}}', amount_before_vat)
//         .replace('{{vat}}', vat)
//         .replace('{{amount_total_net}}', amount_total_net)
//         .replace('{{invoice_number}}', invoice_number)
//         .replace('{{date_from}}', date_from)
//         .replace('{{date_to}}', date_to)
//         .replace('{{date_of_creating}}', date_of_creating)
//         .replace('{{total_in_thai}}', total_in_thai)
//         .replace('{{total_in_english}}', total_in_english)
//         .replace('{{qr_base64}}', qrDataUri)
//         .replace('{{logo_base64}}', logoDataUri);

// // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
// console.log('üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
// const page = await browser.newPage();

// console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç...');
// await page.setContent(invoiceHtml, { 
//     waitUntil: 'networkidle0',
//     timeout: 30000
// });
// const pdfFileName = `${name.replace(/\s+/g, '_')}_${room}_${Date.now()}.pdf`;
// const pdfPath = path.join(pdfFolder, pdfFileName);
// console.log('üñ®Ô∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF:', pdfPath);

// await page.pdf({ 
//     path: pdfPath, 
//     format: 'A4', 
//     printBackground: true,
//     timeout: 30000
// });

// console.log('‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
// await page.close();

//       results.push({
//         rowIndex,
//         room,
//         name,
//         email,
//         water_total,
//         electricity_total,
//         amount_total,
//         status: 'success',
//         pdfUrl: `/pdf/${pdfFileName}`
//       });

//     } catch (error) {
//       console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ${rowIndex}:`, error);
//       results.push({
//         rowIndex,
//         room,
//         name,
//         email,
//         water_total,
//         electricity_total,
//         amount_total,
//         status: 'error',
//         pdfUrl: ''
//       });
//     }
//   }

//   res.send({ message: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", total: data.length, results });
// });

app.post('/upload', upload.single('excel'), async (req, res) => {
  console.log('üì§ –ü–æ–ª—É—á–µ–Ω POST –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞');
  
  if (!req.file) {
      console.log('‚ùå –§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
      return res.status(400).send('–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
  }

  console.log('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:', req.file.filename);

  try {
      console.log('üìñ –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª...');
      const workbook = xlsx.readFile(req.file.path);
      console.log('‚úÖ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      
      const sheetIndex = workbook.SheetNames.length - 4;
      const sheetName = workbook.SheetNames[sheetIndex];
      console.log('üìë –í—ã–±—Ä–∞–Ω –ª–∏—Å—Ç:', sheetName);
      
      const worksheet = workbook.Sheets[sheetName];
      const data = xlsx.utils.sheet_to_json(worksheet, { defval: '' });
      let result = []
      console.log('üìà –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫:', data.length);
      
      // –ü–æ–ª—É—á–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
      console.log('üñ•Ô∏è –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±—Ä–∞—É–∑–µ—Ä–∞...');
      const browser = await getBrowser();
      console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      
      let successCount = 0;
      let errorCount = 0;
      let invoiceCount = 0

      for (let rowIndex = 2; rowIndex < data.length; rowIndex++) {
          invoiceCount += 1
          const row = data[rowIndex];
          const name = row['Guest name'] || '';
          const room = row['Room no.'] || '';
          //const rawEmail = row['Guest e-mail'] || ''; //—É–¥–∞–ª–∏—Ç—å –∫–æ–≥–¥–∞ –∫–æ–ª–æ–Ω–∫–∏ –µ–º–∞–∏–ª –∏ —Ç–µ–ª –±—É–¥—É—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ
          //const email = rawEmail.split(/[\s/]/)[0].trim();     //—É–¥–∞–ª–∏—Ç—å –∫–æ–≥–¥–∞ –∫–æ–ª–æ–Ω–∫–∏ –µ–º–∞–∏–ª –∏ —Ç–µ–ª –±—É–¥—É—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ        
          const email = '89940028777@ya.ru'
          const water_start = (parseFloat(row['Water Meter numbers']) || 0).toFixed(2);
          const water_end = (parseFloat(row['__EMPTY_2']) || 0).toFixed(2);
          const water_consumption = (parseFloat(row['Water consumption']) || 0).toFixed(2);
          const water_price = 89;
          const water_total = (parseFloat(row['__EMPTY_3']) || 0).toFixed(2);
          const electricity_start = (parseFloat(row['Electricity Meter numbers']) || 0).toFixed(2);
          const electricity_end = (parseFloat(row['__EMPTY_4']) || 0).toFixed(2);
          const electricity_consumption = (parseFloat(row['Eletricity']) || 0).toFixed(2);
          const electricity_price = 8;
          const electricity_total = (parseFloat(row['__EMPTY_5']) || 0).toFixed(2);
          const amount_total = (parseFloat(row['Before amount']) || 0).toFixed(2);
          const amount_before_vat = (parseFloat(row['Before amount']) || 0).toFixed(2);
          const vat = (parseFloat(row['SVC']) || 0).toFixed(2);
          const amount_total_net = (parseFloat(row['Total amount']) || 0).toFixed(2);
          const invoice_number = generateInvoiceNumber(invoiceCount, row['Period Check']); 
          const date_from = excelDateToDDMMYYYY(row['Period Check']) || '';
          const date_to = excelDateToDDMMYYYY(row['__EMPTY_1']) || '';
          const date_of_creating = getCurrentDate()
          const total_in_thai = toThaiBahtText(amount_total_net)
          const total_in_english = toWords(amount_total_net)



          console.log(`üìä –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É ${rowIndex}:`, { 
            name, 
            room, 
            water_start, 
            water_end, 
            water_consumption, 
            water_price, 
            water_total, 
            electricity_start, 
            electricity_end, 
            electricity_consumption, 
            electricity_price, 
            electricity_total, 
            amount_total, 
            amount_before_vat, 
            vat, 
            amount_total_net,
            invoice_number,
          date_from,
        date_to,
        date_of_creating,
        total_in_thai,
      total_in_english });

          if (!name && !room) {
              console.log('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É');
              continue;
          }

          try {
              console.log('üìÑ –ß–∏—Ç–∞–µ–º HTML —à–∞–±–ª–æ–Ω...');
              const logoPath = path.join(__dirname, 'img/logo.png');
              const qrPath = path.join(__dirname, 'img/qr.png');
              const logoBase64 = fs.readFileSync(logoPath).toString('base64');
              const qrBase64 = fs.readFileSync(qrPath).toString('base64');
              const logoDataUri = `data:image/png;base64,${logoBase64}`;
              const qrDataUri = `data:image/png;base64,${qrBase64}`;
              let invoiceHtml = fs.readFileSync(path.join(__dirname, 'invoice_template.html'), 'utf-8');
              invoiceHtml = invoiceHtml.replace('{{name}}', name)
                                       .replace('{{room}}', room)
                                       .replace('{{water_start}}', water_start)
                                       .replace('{{water_end}}', water_end)
                                       .replace('{{water_consumption}}', water_consumption)
                                       .replace('{{water_price}}', water_price)
                                       .replace('{{water_total}}', water_total)
                                       .replace('{{electricity_start}}', electricity_start)
                                       .replace('{{electricity_end}}', electricity_end)
                                       .replace('{{electricity_consumption}}', electricity_consumption)
                                       .replace('{{electricity_price}}', electricity_price)
                                       .replace('{{electricity_total}}', electricity_total)
                                       .replace('{{amount_total}}', amount_total)
                                       .replace('{{amount_before_vat}}', amount_before_vat)
                                       .replace('{{vat}}', vat)
                                       .replace('{{amount_total_net}}', amount_total_net)
                                       .replace('{{invoice_number}}', invoice_number)
                                       .replace('{{date_from}}', date_from)
                                       .replace('{{date_to}}', date_to)
                                       .replace('{{date_of_creating}}', date_of_creating)
                                       .replace('{{total_in_thai}}', total_in_thai)
                                       .replace('{{total_in_english}}', total_in_english)
                                       .replace('{{qr_base64}}', qrDataUri)
                                       .replace('{{logo_base64}}', logoDataUri);

              // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
              console.log('üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
              const page = await browser.newPage();
              
              console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç...');
              await page.setContent(invoiceHtml, { 
                  waitUntil: 'networkidle0',
                  timeout: 30000
              });
              const pdfFileName = `${name.replace(/\s+/g, '_')}_${room}_${Date.now()}.pdf`;
              const pdfPath = path.join(pdfFolder, pdfFileName);
              console.log('üñ®Ô∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF:', pdfPath);
              
              await page.pdf({ 
                  path: pdfPath, 
                  format: 'A4', 
                  printBackground: true,
                  timeout: 30000
              });
              
              console.log('‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
              await page.close();
              const pdfUrl = `/pdf/${pdfFileName}`;
              results.push({
                rowIndex,
                room,
                name,
                email,
                water_total,
                electricity_total,
                amount_total,
                status: 'success',
                pdfUrl: pdfUrl
              });
              successCount++;
              
          } catch (error) {
              console.error('‚ùå –û—à–∏–±–∫–∞:', error);
              errorCount++;
            }
      }
      console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ: ${successCount}, –û—à–∏–±–æ–∫: ${errorCount}`);

  } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      res.status(500).send('–û—à–∏–±–∫–∞: ' + error.message);
  }
});

//-------------------------------------------------------------


app.listen(PORT, '0.0.0.0', () => {
  console.log(`‚úÖ Invoices server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  // console.log(`üìã –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ: http://38.244.150.204:${PORT}`);
});