const express = require("express");
const multer = require("multer");
const path = require("path");
const fs = require("fs");
const cors = require("cors");
const xlsx = require('xlsx');
const toThaiBahtText = require('thai-baht-text');
const { toWords } = require('number-to-words');
const archiver = require('archiver');
const app = express();
const PORT = 4000;
const puppeteer = require("puppeteer");
const nodemailer = require('nodemailer');
require('dotenv').config();



app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞...');

// –£–±–∏–≤–∞–µ–º –≤—Å–µ –≤–∏—Å—è—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Chromium –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
console.log('üîÑ –£–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Chromium/Chrome...');
const clearChromiumProcesses = () => {
  try {
    execSync('pkill -f chromium', { stdio: 'ignore' });
    execSync('pkill -f chrome', { stdio: 'ignore' });    
    console.log('‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Chromium/Chrome –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
} catch (error) {
    console.log('‚ÑπÔ∏è –ù–µ –±—ã–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Chromium/Chrome –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è');
}
}
clearChromiumProcesses()



// –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö PDF
const pdfFolder = path.join(__dirname, 'saved_pdf');
if (!fs.existsSync(pdfFolder)) {
    console.log('üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è PDF:', pdfFolder);
    fs.mkdirSync(pdfFolder, { recursive: true });
} else {
    console.log('üìÅ –ü–∞–ø–∫–∞ –¥–ª—è PDF —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', pdfFolder);
}

// –ü—Ä–µ—Ñ–∏–∫—Å –º–∞—Ä—à—Ä—É—Ç–∞
// const ROUTE_PREFIX = '/invoices';

// –î–µ–ª–∞–µ–º –ø–∞–ø–∫—É –¥–æ—Å—Ç—É–ø–Ω–æ–π –ø–æ URL
app.use(`/pdf`, express.static(pdfFolder));

// –ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const uploadFolder = path.join(__dirname, 'uploads');
if (!fs.existsSync(uploadFolder)) {
    console.log('üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫:', uploadFolder);
    fs.mkdirSync(uploadFolder, { recursive: true });
} else {
    console.log('üìÅ –ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', uploadFolder);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ multer
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
      console.log('üìÇ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤:', uploadFolder);
      cb(null, uploadFolder);
  },
  filename: (req, file, cb) => {
      const ext = path.extname(file.originalname);
      const name = path.basename(file.originalname, ext);
      const filename = `${name}-${Date.now()}${ext}`;
      console.log('üìù –ù–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞:', filename);
      cb(null, filename);
  }
});
const upload = multer({
  storage,
  limits: { fileSize: 100 * 1024 * 1024 }
});

// –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Gmail (–Ω—É–∂–µ–Ω app password)
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
      user: process.env.GMAIL_USER,
      pass: process.env.GMAIL_PASS  // –Ω–µ –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–æ–ª—å, –∞ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Google
  }
});

// API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º
app.post(`/send-emails`, express.json(), async (req, res) => {
  const rows = req.body.rows || [];
  console.log('rows', rows)
  const results = [];

  for (const row of rows) {
    try {
      await transporter.sendMail({
        from: '"Invoices" <gsm@lagreenhotel.com>',
        to: row.email,
        subject: `–í–∞—à —Å—á—ë—Ç –∑–∞ –Ω–æ–º–µ—Ä ${row.room} –≤ La Green Hotel & Residence`,
        text: `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${row.name}! –í–æ –≤–ª–æ–∂–µ–Ω–∏–∏ –≤–∞—à —Å—á–µ—Ç –∑–∞ –Ω–æ–º–µ—Ä ${row.room}.`,
        attachments: [
          {
            filename: path.basename(row.pdf),
            path: path.join(__dirname, row.pdf.replace(`/pdf/`, 'saved_pdf/'))
          }
        ]
      });
  
      results.push({ id: row.id, status: "success" });
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞", row.email, err);
      results.push({ id: row.id, status: "error" });
    }
  }

  res.json({ results });
});

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
let browserInstance = null;

async function getBrowser() {
  if (!browserInstance) {
      console.log('üåê –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...');
      
      const launchOptions = {
          args: [
              '--no-sandbox',
              '--disable-setuid-sandbox',
              '--disable-dev-shm-usage',
              '--disable-gpu',
              '--single-process',
              '--no-zygote',
              '--disable-extensions',
              '--disable-software-rasterizer',
              '--disable-background-timer-throttling',
              '--disable-backgrounding-occluded-windows',
              '--disable-renderer-backgrounding'
          ],
          headless: 'new',
          timeout: 120000,
          executablePath: '/snap/chromium/current/usr/lib/chromium-browser/chrome'
      };
      
      console.log('‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞:', launchOptions);
      
      try {
          browserInstance = await puppeteer.launch(launchOptions);
          console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
          const version = await browserInstance.version();
          console.log('üåê –í–µ—Ä—Å–∏—è –±—Ä–∞—É–∑–µ—Ä–∞:', version);
          
      } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞:', error);
          
          // –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å
          console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å...');
          launchOptions.executablePath = '/usr/bin/chromium-browser';
          
          try {
              browserInstance = await puppeteer.launch(launchOptions);
              console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º –ø—É—Ç–µ–º');
          } catch (retryError) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –∑–∞–ø—É—Å–∫–∞:', retryError);
              throw retryError;
          }
      }
  }
  
  return browserInstance;
}

function getCurrentDate() {
  const today = new Date();
  const day = String(today.getDate()).padStart(2, '0');
  const month = String(today.getMonth() + 1).padStart(2, '0');
  const year = today.getFullYear();
  return `${day}/${month}/${year}`;
}

function excelDateToDDMMYYYY(serial) {
  const excelEpoch = new Date(Date.UTC(1899, 11, 30)); // –±–∞–∑–∞ –¥–ª—è Excel
  const days = Math.floor(serial);
  const milliseconds = days * 24 * 60 * 60 * 1000;
  const date = new Date(excelEpoch.getTime() + milliseconds);

  const dd = String(date.getUTCDate()).padStart(2, '0');
  const mm = String(date.getUTCMonth() + 1).padStart(2, '0'); // –º–µ—Å—è—Ü—ã —Å 0
  const yyyy = date.getUTCFullYear();

  return `${dd}/${mm}/${yyyy}`;
}

function generateInvoiceNumber(counter, serial) {
  const excelEpoch = new Date(Date.UTC(1899, 11, 30)); // –±–∞–∑–∞ –¥–ª—è Excel
  const days = Math.floor(serial);
  const milliseconds = days * 24 * 60 * 60 * 1000;
  const date = new Date(excelEpoch.getTime() + milliseconds);

  const mm = String(date.getUTCMonth() + 1).padStart(2, '0'); // –º–µ—Å—è—Ü—ã —Å 0
  const yyyy = date.getUTCFullYear();

  const number = String(counter).padStart(3, '0'); // –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Å –≤–µ–¥—É—â–∏–º–∏ –Ω—É–ª—è–º–∏
  return `PS${yyyy}${mm}-${number}`;
}






// –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
let clients = [];

app.get('/events', (req, res) => {
  res.setHeader('Content-Type', 'text/event-stream');
  res.setHeader('Cache-Control', 'no-cache');
  res.setHeader('Connection', 'keep-alive');

  // –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤
  clients.push(res);

  req.on('close', () => {
    clients = clients.filter(c => c !== res);
  });
});

function sendLog(message) {
  clients.forEach(res => {
    res.write(`data: ${JSON.stringify({ message })}\n\n`);
  });
}











app.post(`/upload`, upload.single('excel'), async (req, res) => {
  console.log('üì§ –ü–æ–ª—É—á–µ–Ω POST –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞');
  sendLog('üì§ –ó–∞–≥—Ä—É–∂–∞—é')

  if (!req.file) {
      console.log('‚ùå –§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
      sendLog('‚ùå –§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω')
      return res.status(400).send('–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
  }

  console.log('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:', req.file.filename);
  sendLog('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω')


  try {
      console.log('üìñ –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª...');
      sendLog('üìñ –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª...')
      const workbook = xlsx.readFile(req.file.path);
      console.log('‚úÖ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      sendLog('‚úÖ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ')
      
      const sheetIndex = workbook.SheetNames.length - 4;
      const sheetName = workbook.SheetNames[sheetIndex];

      // –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–∏—Å—Ç (–¥–µ–ø–æ–∑–∏—Ç)
      const depositIndex = workbook.SheetNames.length - 1;
      const depositName = workbook.SheetNames[depositIndex];


      console.log('üìë –í—ã–±—Ä–∞–Ω –ª–∏—Å—Ç:', sheetName);
      sendLog('üìë –í—ã–±—Ä–∞–Ω –ª–∏—Å—Ç:', sheetName)
      
      const worksheet = workbook.Sheets[sheetName];
      const depostSheet = workbook.Sheets[depositName];
      const data = xlsx.utils.sheet_to_json(worksheet, { defval: '' });
      const depositData = xlsx.utils.sheet_to_json(depostSheet, { defval: '' })
      console.log('üìà –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫:', data.length);

    
      // –ü–æ–ª—É—á–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
      console.log('üñ•Ô∏è –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±—Ä–∞—É–∑–µ—Ä–∞...');
      sendLog('üîÑ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä PDF')
      const browser = await getBrowser();
      console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      
      let successCount = 0;
      let errorCount = 0;
      let invoiceCount = 0
      let results = []

      // —Å–æ–∑–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å –¥–µ–ø–æ–∑–∏—Ç–æ–≤
      // —Å–æ–∑–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å –¥–µ–ø–æ–∑–∏—Ç–æ–≤
      const depositMap = {};
      depositData.forEach((row, index) => {

        if (index < 2) return; // –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 —Å—Ç—Ä–æ–∫–∏ (0 –∏ 1)
        console.timeLog('deosti!!!', row)
        // const roomNo = row['Room no.'] || row['Room']; // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ —Å–º–æ—Ç—Ä–∏ –≤ —Å–≤–æ—ë–º Excel
        // const deposit = row['Deposit'] || row['Amount']; // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ —Å –¥–µ–ø–æ–∑–∏—Ç–æ–º
        // if (roomNo) {
        //   depositMap[roomNo] = deposit;
        // }
      });

      for (let rowIndex = 2; rowIndex < data.length; rowIndex++) {
          invoiceCount += 1
          const row = data[rowIndex];
          const name = row['Guest name'] || '';
          const room = row['Room no.'] || '';
          const email = row['Guest e-mail'] || ''; //—É–¥–∞–ª–∏—Ç—å –∫–æ–≥–¥–∞ –∫–æ–ª–æ–Ω–∫–∏ –µ–º–∞–∏–ª –∏ —Ç–µ–ª –±—É–¥—É—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ
          // const email = rawEmail.split(/[\s/]/)[0].trim();     //—É–¥–∞–ª–∏—Ç—å –∫–æ–≥–¥–∞ –∫–æ–ª–æ–Ω–∫–∏ –µ–º–∞–∏–ª –∏ —Ç–µ–ª –±—É–¥—É—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ        
          // const email = '89940028777@ya.ru'
          const water_start = (parseFloat(row['Water Meter numbers']) || 0).toFixed(2);
          const water_end = (parseFloat(row['__EMPTY_2']) || 0).toFixed(2);
          const water_consumption = (parseFloat(row['Water consumption']) || 0).toFixed(2);
          const water_price = 89;
          const water_total = (parseFloat(row['__EMPTY_3']) || 0).toFixed(2);
          const electricity_start = (parseFloat(row['Electricity Meter numbers']) || 0).toFixed(2);
          const electricity_end = (parseFloat(row['__EMPTY_4']) || 0).toFixed(2);
          const electricity_consumption = (parseFloat(row['Eletricity']) || 0).toFixed(2);
          const electricity_price = 8;
          const electricity_total = (parseFloat(row['__EMPTY_5']) || 0).toFixed(2);
          const amount_total = (parseFloat(row['Before amount']) || 0).toFixed(2);
          const amount_before_vat = (parseFloat(row['Before amount']) || 0).toFixed(2);
          const vat = (parseFloat(row['SVC']) || 0).toFixed(2);
          const amount_total_net = (parseFloat(row['Total amount']) || 0).toFixed(2);
          const invoice_number = generateInvoiceNumber(invoiceCount, row['Period Check']); 
          const date_from = excelDateToDDMMYYYY(row['Period Check']) || '';
          const date_to = excelDateToDDMMYYYY(row['__EMPTY_1']) || '';
          const date_of_creating = getCurrentDate()
          const total_in_thai = toThaiBahtText(amount_total_net)
          const total_in_english = toWords(amount_total_net)



          console.log(`üìä –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É ${rowIndex}:`, { 
            name, 
            room, 
            water_start, 
            water_end, 
            water_consumption, 
            water_price, 
            water_total, 
            electricity_start, 
            electricity_end, 
            electricity_consumption, 
            electricity_price, 
            electricity_total, 
            amount_total, 
            amount_before_vat, 
            vat, 
            amount_total_net,
            invoice_number,
          date_from,
        date_to,
        date_of_creating,
        total_in_thai,
      total_in_english });

          if (!name && !room) {
              console.log('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É');
              continue;
          }

          try {
              console.log('üìÑ –ß–∏—Ç–∞–µ–º HTML —à–∞–±–ª–æ–Ω...');
              sendLog('üìÑ –ß–∏—Ç–∞–µ–º HTML —à–∞–±–ª–æ–Ω...')
              const logoPath = path.join(__dirname, 'img/logo.png');
              const qrPath = path.join(__dirname, 'img/qr.png');
              const logoBase64 = fs.readFileSync(logoPath).toString('base64');
              const qrBase64 = fs.readFileSync(qrPath).toString('base64');
              const logoDataUri = `data:image/png;base64,${logoBase64}`;
              const qrDataUri = `data:image/png;base64,${qrBase64}`;
              let invoiceHtml = fs.readFileSync(path.join(__dirname, 'invoice_template.html'), 'utf-8');
              invoiceHtml = invoiceHtml.replace('{{name}}', name)
                .replace('{{room}}', room)
                .replace('{{water_start}}', water_start)
                .replace('{{water_end}}', water_end)
                .replace('{{water_consumption}}', water_consumption)
                .replace('{{water_price}}', water_price)
                .replace('{{water_total}}', water_total)
                .replace('{{electricity_start}}', electricity_start)
                .replace('{{electricity_end}}', electricity_end)
                .replace('{{electricity_consumption}}', electricity_consumption)
                .replace('{{electricity_price}}', electricity_price)
                .replace('{{electricity_total}}', electricity_total)
                .replace('{{amount_total}}', amount_total)
                .replace('{{amount_before_vat}}', amount_before_vat)
                .replace('{{vat}}', vat)
                .replace('{{amount_total_net}}', amount_total_net)
                .replace('{{invoice_number}}', invoice_number)
                .replace('{{date_from}}', date_from)
                .replace('{{date_to}}', date_to)
                .replace('{{date_of_creating}}', date_of_creating)
                .replace('{{total_in_thai}}', total_in_thai)
                .replace('{{total_in_english}}', total_in_english)
                .replace('{{qr_base64}}', qrDataUri)
                .replace('{{logo_base64}}', logoDataUri);

              // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
              console.log('üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
              sendLog('üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...')
              const page = await browser.newPage();
              
              console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç...');
              sendLog('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç...')
              await page.setContent(invoiceHtml, { 
                  waitUntil: 'networkidle0',
                  timeout: 30000
              });
              const pdfFileName = `${name.replace(/\s+/g, '_')}_${room}_${Date.now()}.pdf`;
              const pdfPath = path.join(pdfFolder, pdfFileName);
              console.log('üñ®Ô∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF:', pdfPath);
              sendLog('üñ®Ô∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF:', pdfPath)
              
              await page.pdf({ 
                  path: pdfPath, 
                  format: 'A4', 
                  printBackground: true,
                  timeout: 30000
              });
              
              console.log('‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
              sendLog(`‚úÖ PDF —Å–æ–∑–¥–∞–Ω!: ${pdfFileName}`);
              await page.close();
              const pdfUrl = `/pdf/${pdfFileName}`;
              results.push({
                room,
                name,
                email,
                water_total,
                electricity_total,
                amount_total,
                status: 'success',
                pdfUrl: pdfUrl
            });

              successCount++;
              
          } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –¥–ª—è —Å—Ç—Ä–æ–∫–∏', rowIndex, err);
            sendLog('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –¥–ª—è —Å—Ç—Ä–æ–∫–∏', rowIndex, err)
            results.push({
                room,
                name,
                email,
                water_total,
                electricity_total,
                amount_total,
                status: 'error',
                pdfUrl: null
            })
              errorCount++;
            }
      }
      res.json({ results });
      console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ: ${successCount}, –û—à–∏–±–æ–∫: ${errorCount}`);
      sendLog(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ: ${successCount}, –û—à–∏–±–æ–∫: ${errorCount}`)
      if (browserInstance) {
        console.log('‚ùå –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF...');
        await browserInstance.close();
        await clearChromiumProcesses();
        console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
        browserInstance = null; // —á—Ç–æ–±—ã –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—ã–∑–æ–≤–µ getBrowser() –∑–∞–ø—É—Å–∫–∞–ª—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
    }
  } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      sendLog('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
      res.status(500).send('–û—à–∏–±–∫–∞: ' + error.message);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
process.on('SIGINT', async () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
  if (browserInstance) {
      console.log('‚ùå –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...');
      await browserInstance.close();
      console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
  }
  console.log('üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã');
  process.exit();
});

//all invoices ZIP
app.get(`/download-all`, (req, res) => {
  const zipName = `all_invoices_${Date.now()}.zip`;
  res.setHeader('Content-Disposition', `attachment; filename=${zipName}`);
  res.setHeader('Content-Type', 'application/zip');

  const archive = archiver('zip', { zlib: { level: 9 } });

  archive.on('error', err => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏:', err);
      res.status(500).send({ error: err.message });
  });

  // –ü—Ä—è–º–æ –≤ –ø–æ—Ç–æ–∫ –æ—Ç–≤–µ—Ç–∞
  archive.pipe(res);

  // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ PDF –∏–∑ –ø–∞–ø–∫–∏
  fs.readdirSync(pdfFolder).forEach(file => {
      const filePath = path.join(pdfFolder, file);
      archive.file(filePath, { name: file });
  });

  archive.finalize();
});

//download selected
app.post('/download-selected', express.json(), (req, res) => {
  const { pdfUrls } = req.body; // –º–∞—Å—Å–∏–≤ –ø—É—Ç–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä ['/pdfs/file1.pdf', '/pdfs/file2.pdf']

  if (!pdfUrls || !pdfUrls.length) {
    return res.status(400).send({ error: '–ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤' });
  }

  const zipName = `selected_invoices_${Date.now()}.zip`;
  res.setHeader('Content-Disposition', `attachment; filename=${zipName}`);
  res.setHeader('Content-Type', 'application/zip');

  const archive = archiver('zip', { zlib: { level: 9 } });

  archive.on('error', (err) => {
    console.error('–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏:', err);
    res.status(500).send({ error: err.message });
  });

  archive.pipe(res);

  const pdfFolder = path.join(__dirname, 'saved_pdf'); 
  pdfUrls.forEach((url) => {
    const fileName = path.basename(url); // –ø—Ä–æ—Å—Ç–æ –∏–º—è —Ñ–∞–π–ª–∞
    const filePath = path.join(pdfFolder, fileName);
    console.log(filePath);
    if (fs.existsSync(filePath)) {
      archive.file(filePath, { name: fileName });
    } else {
      console.warn('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', filePath);
    }
  });

  archive.finalize();
});


app.listen(PORT, '0.0.0.0', () => {
  console.log(`‚úÖ Invoices server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  // console.log(`üìã –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ: http://38.244.150.204:${PORT}`);
});

